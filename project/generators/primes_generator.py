def prime_num(num):

    """
    Determines if a given number is a prime number.

    Args:
        num (int): The number to check for primality.

    Returns:
        bool: True if the number is prime, False otherwise.

    """

    if num < 2:
        return False
    for i in range(2, int(num**0.5) + 1):
        if num % i == 0:
            return False
    return True


def prime_generator():

    """
    Generates an infinite sequence of prime numbers.

    Returns:
        generator: A generator that yields prime numbers in ascending order.

    """

    num = 2
    while True:
        if prime_num(num):
            yield num
        num += 1


def kth_prime_generator(k):

    """
    Retrieves the `k`-th prime number from the sequence generated by `prime_generator`.

    Args:
        k (int): The index of the prime number to retrieve. Must be greater than 0.

    Returns:
        int: The `k`-th prime number from the generated sequence.

    Raises:
        AssertionError: If `k` is not greater than 0.

    """

    assert k > 0
    prime_gen = prime_generator()
    prime = 0
    for _ in range(k):
        prime = next(prime_gen)
    return prime
